const e=window.MaplestorySkills.h;function l(e,l,i){let s={},r=0;i&&e[i.prop]>0&&i.skillRequirements&&i.skillRequirements.forEach(l=>{!function e(l,i){l[i.skill.prop]<i.level&&(l[i.skill.prop]=i.level),i.skill.skillRequirements&&i.skill.skillRequirements.forEach(i=>{e(l,i)})}(e,l)}),Object.keys(l).forEach(i=>{let t=l[i];r+=e[t.prop],s[t.prop]={locked:!1,required:void 0,limitReached:!1}}),i&&r>72&&(e[i.prop]-=r-72),Object.keys(l).forEach(i=>{let t=l[i];t.skillRequirements&&t.skillRequirements.forEach(l=>{e[l.skill.prop]<l.level&&(s[t.prop].locked=!0,e[t.prop]=0)}),s[t.prop].limitReached=r>=72,0===e[t.prop]&&function e(l,i){let s=0;return i.skillRequirements?(i.skillRequirements.forEach(i=>{s+=e(l,i.skill),s+=Math.max(0,i.level-l[i.skill.prop])}),s):0}(e,t)+1>72-r&&(s[t.prop].limitReached=!0)}),e.skills=s}function i(e,l,i){if(l.skillRequirements){let s=!1;l.skillRequirements.forEach(l=>{if(e[l.skill.prop]<l.level){let r=i?`Level ${l.level}+`:void 0;e.skills[l.skill.prop].required!==r&&(e.skills[l.skill.prop].required=r,s=!0)}}),s&&(e.skills=Object.assign({},e.skills))}}function s(l,s,r,t=!1,o){return Object.keys(s).map(p=>{let k=s[p],n=l.skills[k.prop];return e("ms-skill",Object.assign({class:k.prop,skill:k,level:l[k.prop],locked:n.locked,required:n.required,limitReached:n.limitReached,disabled:!r,loop:r,onLevelchanged:e=>l.levelChanged(k,e.detail),onMouseEnter:()=>n.locked&&i(l,k,!0),onMouseLeave:()=>n.locked&&i(l,k,!1),extras:t},o))})}function r(e,l,i){let s={skills:Object.keys(l).map(i=>{let s=l[i];return{skill:s.name,attr:s.attr,prop:s.prop,level:e[s.prop],minLevel:s.minLevel,maxLevel:s.maxLevel}})};return i&&(s.other=Object.keys(i).map(e=>({attr:e,value:i[e]}))),s}export{l as a,r as b,s as c};
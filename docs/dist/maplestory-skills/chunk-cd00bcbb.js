const e=window.MaplestorySkills.h;function l(e,l,i){let s={},r=0;Object.keys(l).forEach(i=>{let o=l[i];r+=e[o.prop],s[o.prop]={locked:!1,required:void 0,limitReached:!1}}),r>72&&(e[i.prop]-=r-72),Object.keys(l).forEach(i=>{let o=l[i];o.skillRequirements&&o.skillRequirements.forEach(l=>{e[l.skill.prop]<l.level&&(s[o.prop].locked=!0,e[o.prop]=0)}),s[o.prop].limitReached=r>=72}),e.skills=s}function i(e,l,i){if(l.skillRequirements){let s=!1;l.skillRequirements.forEach(l=>{if(e[l.skill.prop]<l.level){let r=i?`Level ${l.level}+`:void 0;e.skills[l.skill.prop].required!==r&&(e.skills[l.skill.prop].required=r,s=!0)}}),s&&(e.skills=Object.assign({},e.skills))}}function s(l,s,r,o=!1,t){return Object.keys(s).map(p=>{let a=s[p],k=l.skills[a.prop];return e("ms-skill",Object.assign({class:a.prop,skill:a,level:l[a.prop],locked:k.locked,required:k.required,limitReached:k.limitReached,disabled:!r,loop:r,onLevelchanged:e=>l.levelChanged(a,e.detail),onMouseEnter:()=>k.locked&&i(l,a,!0),onMouseLeave:()=>k.locked&&i(l,a,!1),extras:o},t))})}function r(e,l,i){let s={skills:Object.keys(l).map(i=>{let s=l[i];return{skill:s.name,attr:s.attr,prop:s.prop,level:e[s.prop],minLevel:s.minLevel,maxLevel:s.maxLevel}})};return i&&(s.other=Object.keys(i).map(e=>({attr:e,value:i[e]}))),s}export{l as a,r as b,s as c};
import{h as s,c as e,g as l,d as t,f as i,e as r}from"./p-c043af2c.js";const n=(()=>{try{return!!new CSSStyleSheet}catch(s){return!1}})();function a(s,e,l,t){e.__constructableStylesheets||(e.__constructableStylesheets={});let i=s[t.cacheKeyProperty];return e.__constructableStylesheets[i]||(e.__constructableStylesheets[i]=new CSSStyleSheet,e.__constructableStylesheets[i].replace(s[l])),e.__constructableStylesheets[i]}class h{constructor(s){t(this,s),this.styles=h.getStyles(this.msClass)}componentDidLoad(){this.resize()}resize(){let s=this.host,e=s.parentNode;e.host&&(e=e.host);let l=e.offsetWidth/815;l<1?(s.style.transform=`scale(${l})`,s.style.marginBottom=`-${770-770*l}px`,s.style.marginRight=`-${815-815*l}px`):(s.style.transform=null,s.style.marginBottom=null,s.style.marginRight=null)}render(){return e(l,null,e("ms-footer",null),e("div",{class:"chart"},e("div",{class:"class-icon"},e("div",{class:"chart-class "+this.msClass},e("slot",null)))))}static getStyles(s){return`\n      ms-chart {\n        cursor: url(${i("assets/cursor.png")}) 5 8, auto;\n      }\n      ms-chart:active {\n        cursor: url(${i("assets/cursor-down.png")}) 5 8, auto;\n      }\n      :host, :host(:hover), ms-chart {\n        cursor: url(${i("assets/cursor.png")}) 5 8, auto;\n      }\n      :host(:active) {\n        cursor: url(${i("assets/cursor-down.png")}) 5 8, auto;\n      }\n      .chart {\n        background-image: url(${i("assets/charts/chart.jpg")});\n      }\n      .class-icon {\n        background-image: url(${i(`assets/charts/${s}-icon.png`)})\n      }\n      .chart-class {\n        background-image: url(${i(`assets/charts/${s}-lines.png`)});\n      }\n    `}get host(){return s(this)}static get style(){return":host{display:block;width:815px;height:770px;position:relative;-webkit-transform-origin:top left;transform-origin:top left;font-size:16px;color:#fff;font-family:Roboto,Arial}:host,:host(:active),_:-ms-lang(x){cursor:auto}.chart{position:absolute}.chart,.class-icon{width:100%;height:100%;background-repeat:no-repeat}.class-icon{background-position:calc(50% + 34px) calc(50% - 18px)}.chart>.class-icon>div{width:100%;height:100%;background-position:171px 88px;background-repeat:no-repeat}ms-footer{margin-top:-30px;-webkit-transition:margin-top .3s ease-in-out;transition:margin-top .3s ease-in-out}:host(:hover) ms-footer{margin-top:0}::slotted(ms-skill){position:absolute}::slotted(ms-skill[row=\"1\"]){top:4px}::slotted(ms-skill[row=\"2\"]){top:132px}::slotted(ms-skill[row=\"3\"]){top:260px}::slotted(ms-skill[row=\"4\"]){top:388px}::slotted(ms-skill[row=\"5\"]){top:516px}::slotted(ms-skill[row=\"6\"]){top:644px}::slotted(ms-skill[column=\"1\"]){left:138px}::slotted(ms-skill[column=\"2\"]){left:318px}::slotted(ms-skill[column=\"3\"]){left:498px}::slotted(ms-skill[column=\"4\"]){left:678px}"}}!function(s,e,l,t){var i,r=arguments.length,n=r<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,l):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(s,e,l,t);else for(var a=s.length-1;a>=0;a--)(i=s[a])&&(n=(r<3?i(n):r>3?i(e,l,n):i(e,l))||n);r>3&&n&&Object.defineProperty(e,l,n)}([function(t={}){return(i,r)=>{t.cacheKeyProperty||(t.cacheKeyProperty=r);const{componentWillLoad:h,render:o}=i;n?i.componentWillLoad=function(){const e=h&&h.call(this),l=s(this),n=l.shadowRoot||l;return n.adoptedStyleSheets=[...n.adoptedStyleSheets||[],a(this,i,r,t)],e}:i.render=function(){let s=o.call(this);const t={$tag$:"style",$children$:[{$text$:this[r],$flags$:0}],$flags$:0,$attrs$:{type:"text/css"}};return"string"!=typeof s&&"object"==typeof s.$tag$||(s=e(l,null,s)),s.$children$.push(t),s}}}({cacheKeyProperty:"msClass"})],h.prototype,"styles",void 0);class o{constructor(s){t(this,s)}render(){return e("a",{href:"https://bodinaren.github.io/maplestory-skills/",target:"_blank"},"MapleStory 2 Skill Charts")}static get style(){return":host{font-family:Roboto;position:absolute;top:100%;right:0;text-align:center;font-size:.7em;padding:0 5px 2px;border-bottom-left-radius:3px;border-bottom-right-radius:3px;background-color:#1c1c1c;border-right:1px solid #121212;-webkit-box-shadow:inset -1px 0 #222;box-shadow:inset -1px 0 #222}:host,a{color:#fff}a{cursor:inherit}"}}class c{constructor(s){t(this,s),this.sp=!1}render(){return e(l,null,e("img",{src:i(`assets/skills/${this.name}.png`)}),this.sp&&e("img",{src:i("assets/sp.png")}))}static get style(){return":host{display:-ms-inline-flexbox;display:inline-flex;position:relative;width:43px;height:50px;-ms-flex-pack:center;justify-content:center}img:nth-of-type(2){position:absolute;bottom:1px;left:-4px}"}}class u{constructor(s){t(this,s),this.level=0,this.extras=!1,this.limitReached=!1,this.locked=!1,this.disabled=!0,this.loop=!1,this.onLevelChanged=r(this,"levelchanged",7),this.onSkillClicked=r(this,"skillclicked",7)}componentWillLoad(){this.level<this.skill.minLevel&&(this.level=this.skill.minLevel),this.level>this.skill.maxLevel&&(this.level=this.skill.maxLevel),this.column||(this.column=this.skill.column),this.row||(this.row=this.skill.row)}skillChanged(){this.onLevelChanged.emit(this.level)}render(){return e(l,{passive:this.skill.passive},this.renderStyles(),e("div",{class:"skill",onMouseEnter:()=>this.showOverlay(),onMouseLeave:()=>this.hideOverlay(),onClick:()=>this.emitSkillClick()},e("ms-icon",{name:this.skill.attr,sp:this.skill.sp})),e("div",{class:"controls"},e("div",null,e("button",{class:{minus:!0,wrap:this.loop&&this.level===this.skill.minLevel},disabled:this.shouldDisableMinus(),onClick:()=>this.minus(),onMouseEnter:()=>this.showOverlay(-1),onMouseLeave:()=>this.hideOverlay(),hidden:this.level===this.skill.minLevel&&!this.loop},e("img",{src:i("assets/minus.png")}),e("img",{src:i("assets/minus-hover.png")}),e("img",{src:i("assets/minus-active.png")}),e("img",{src:i("assets/minus-wrap.png")}),e("img",{src:i("assets/minus-wrap-hover.png")}),e("img",{src:i("assets/minus-wrap-active.png")}))),e("span",null,this.level,"/",this.skill.maxLevel),e("div",null,e("button",{class:{plus:!0,wrap:this.loop&&(this.level===this.skill.maxLevel||this.limitReached)},disabled:this.shouldDisablePlus(),onClick:()=>this.plus(),onMouseEnter:()=>this.showOverlay(1),onMouseLeave:()=>this.hideOverlay(),hidden:this.level===this.skill.maxLevel&&!this.loop},e("img",{src:i("assets/plus.png")}),e("img",{src:i("assets/plus-hover.png")}),e("img",{src:i("assets/plus-active.png")}),e("img",{src:i("assets/plus-wrap.png")}),e("img",{src:i("assets/plus-wrap-hover.png")}),e("img",{src:i("assets/plus-wrap-active.png")})))),e("ms-skill-overlay",{hidden:!this.overlayLevel,skill:this.skill,extras:this.extras,level:this.overlayLevel||1,class:this.skill.prop}))}renderStyles(){return e("style",{type:"text/css"},`\n        ms-skill .controls { background-image: url(${i("assets/skill-bar.png")}); }\n        :host .controls { background-image: url(${i("assets/skill-bar.png")}); }\n\n        ms-skill:not([passive]) .skill { background-image: url(${i("assets/skill-shield.png")}); }\n        :host(:not([passive])) .skill { background-image: url(${i("assets/skill-shield.png")}); }\n\n        ms-skill[passive] .skill { background-image: url(${i("assets/skill-shield-passive.png")}); }\n        :host([passive]) .skill { background-image: url(${i("assets/skill-shield-passive.png")}); }\n\n        ms-skill[locked] .skill:after { background-image: url(${i("assets/skill-locked.png")}); }\n        :host([locked]) .skill:after { background-image: url(${i("assets/skill-locked.png")}); }\n\n        ms-skill[required]:after { background-image: url(${i("assets/skill-overlay.png")}); }\n        :host([required]):after { background-image: url(${i("assets/skill-overlay.png")}); }\n      `)}shouldDisableMinus(){return this.disabled||this.skill.minLevel===this.skill.maxLevel||!this.loop&&this.level===this.skill.minLevel||this.loop&&this.limitReached&&this.level===this.skill.minLevel}shouldDisablePlus(){return this.disabled||this.skill.minLevel===this.skill.maxLevel||this.limitReached&&(!this.loop||this.level===this.skill.minLevel)}showOverlay(s=0){this.overlayLevel=this.level+s,0===this.overlayLevel?this.overlayLevel=1:this.overlayLevel<0?this.overlayLevel=this.loop?this.skill.maxLevel:1:this.overlayLevel>this.skill.maxLevel&&(this.overlayLevel=this.loop?1:this.skill.maxLevel)}hideOverlay(){this.overlayLevel=0}emitSkillClick(){this.onSkillClicked.emit(this.skill)}plus(){(this.level<this.skill.maxLevel||this.loop)&&(this.level++,(this.level>this.skill.maxLevel||this.limitReached&&this.level>this.skill.minLevel)&&(this.level=this.skill.minLevel),this.skillChanged()),this.showOverlay(1)}minus(){(this.level>this.skill.minLevel||this.loop)&&(this.level--,this.level<this.skill.minLevel&&(this.level=this.skill.maxLevel),this.skillChanged()),this.showOverlay(-1)}static get watchers(){return{level:["skillChanged"]}}static get style(){return":host{height:115px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.skill,:host{display:block;width:72px}.skill{height:84px;background-repeat:no-repeat}.skill>ms-icon{display:block;position:absolute;left:14px;top:17px}.controls{display:-ms-flexbox;display:flex;width:109px;height:36px;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;margin-left:-18.5px;margin-top:-4px}.controls span{text-align:center;-ms-flex-positive:1;flex-grow:1;font-size:.9em}.controls div{margin-top:4px;width:30px}.controls div,_:-ms-lang(x){margin-top:0}:host([locked]) .skill:after{content:\"\"}:host([locked]) .skill:after,:host([required]):after{position:absolute;width:52px;height:61px;top:11px;left:10px;pointer-events:none}:host([required]):after{content:attr(required);display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;color:#ff0;font-size:.8em}ms-skill-overlay{position:absolute;margin:0 20px}:host([column=\"1\"]) ms-skill-overlay,:host([column=\"2\"]) ms-skill-overlay{left:100%}:host([column=\"3\"]) ms-skill-overlay,:host([column=\"4\"]) ms-skill-overlay{right:100%}:host([row=\"1\"]) ms-skill-overlay,:host([row=\"2\"]) ms-skill-overlay,:host([row=\"3\"]) ms-skill-overlay{top:0}:host([row=\"4\"]) ms-skill-overlay,:host([row=\"5\"]) ms-skill-overlay,:host([row=\"6\"]) ms-skill-overlay{bottom:0}:host-context(ms-chart) ms-skill-overlay.electricBlast{bottom:-100px}:host-context(ms-chart) ms-skill-overlay.magnumBlow{top:-75px}:host-context(ms-runeblade[sigil=flameSigil]) ms-skill-overlay.impact{top:-25px}:host-context(ms-runeblade[sigil=stormSigil]) ms-skill-overlay.impact{top:-50px}button{width:30px;height:33px;background:none;border:none;padding:0;outline:0;cursor:inherit}.minus img,.plus img,_:-ms-lang(x){cursor:pointer}button:active{cursor:inherit}button img{display:none}button:not([disabled]):not([hidden]){display:inline-block}button.wrap:not([disabled]):active img:nth-child(6),button.wrap:not([disabled]):not(:active):hover img:nth-child(5),button.wrap:not([disabled]):not(:active):not(:hover) img:nth-child(4),button:not(.wrap):not([disabled]):active img:nth-child(3),button:not(.wrap):not([disabled]):not(:active):hover img:nth-child(2),button:not(.wrap):not([disabled]):not(:active):not(:hover) img:first-child{display:inline}.minus{left:-1px}.plus{right:0}"}}let p=/\[(.*?)\]/;class v{constructor(s){t(this,s),this.level=0,this.extras=!1}componentWillLoad(){this.refreshData()}componentWillUpdate(){this.refreshData()}refreshData(){this.setRequirements(),this.setSpirit(),this.setCooldown(),this.description=this.parseDescription(this.skill),this.extraDescriptions=void 0,this.extras&&this.skill.extras&&(this.extraDescriptions=this.skill.extras.map(s=>this.parseDescription(s)))}render(){return e("div",null,e("h1",{class:this.skill.element,style:this.skill.element&&{background:`url(${i(this.skill.element.toLowerCase()+".jpg")}, ${this.getGradient(this.skill.element)}`}},this.skill.name,this.skill.element&&e("span",{class:"element"},this.skill.element)),e("div",{class:"content"},e("div",null,e("div",{class:"content-header"},e("div",{class:"icon"},this.skill.attr&&e("ms-icon",{slot:"icon",name:this.skill.attr,sp:this.skill.sp})||e("slot",{name:"icon"})),e("div",{class:"infoAndLevel"},e("div",{class:"shortInfo"},this.spirit&&`Spirit ${this.spirit}`,this.spirit&&this.cooldown&&" / ",this.cooldown&&`Cooldown: ${this.cooldown} Sec`),e("div",{class:"level"},"Level ",this.level||1,this.level===this.skill.maxLevel&&" | MAX"))),this.requirements&&this.requirements.length>0&&e("div",{class:"requirements"},e("p",null,"[Requirements]"),this.requirements.map(s=>e("p",null,s)))),e("div",null,e("p",null,this.skill.passive?"Passive":"Active"),this.skill.attackType&&e("p",null,this.skill.attackType),this.skill.weaponRequired&&e("p",null,"Weapon Required: ",this.skill.weaponRequired)),e("div",{class:"description"},this.description&&e("p",{innerHTML:this.description})||e("p",null,e("slot",{name:"description"}))),this.extraDescriptions&&this.extraDescriptions.map(s=>e("div",{class:"description extras"},e("p",{innerHTML:s})))))}setRequirements(){let s=[];this.skill.levelRequirement&&this.skill.levelRequirement[this.level]>0&&s.push(`Level ${this.skill.levelRequirement[this.level]}+`),this.skill.skillRequirements&&Array.prototype.push.apply(s,this.skill.skillRequirements.map(s=>`${s.skill.name} [Level ${s.level}+]`)),this.requirements=s}setSpirit(){Array.isArray(this.skill.spirit)?this.spirit=this.skill.spirit[this.level]:this.spirit||(this.spirit=this.skill.spirit)}setCooldown(){Array.isArray(this.skill.cooldown)?this.cooldown=this.skill.cooldown[this.level]:this.cooldown||(this.cooldown=this.skill.cooldown)}parseDescription(s){let e,l=s.description;for(;e=p.exec(l);){let t=s.values&&s.values[e[1]];t||(t=s[e[1]]),l=l.replace(e[0],t[this.level].toString())}return l}getGradient(s){switch(s.toLowerCase()){case"dark":return"linear-gradient(to right, #1F0A1B 0%, #1F0A1B 60%, #3D1620 100%)";case"electric":return"linear-gradient(to right, #0A262A 0%, #0A262A 60%, #135764 100%)";case"fire":return"linear-gradient(to right, #3A0803 0%, #3A0803 60%, #6E2A11 100%)";case"holy":return"linear-gradient(to right, #3C1E04 0%, #3C1E04 60%, #7C4D01 100%)";case"ice":return"linear-gradient(to right, #021835 0%, #021835 60%, #153772 100%)";case"toxic":return"linear-gradient(to right, #20142C 0%, #20142C 60%, #3E1652 100%)"}}static get style(){return":host{color:#fff;z-index:100;width:350px;background-color:rgba(0,0,0,.9);border:1px solid #2c2c2c;pointer-events:none;font-size:.9em;border-radius:3px;overflow:hidden;-webkit-box-shadow:0 0 3px 1px #000;box-shadow:0 0 3px 1px #000}h1{text-transform:none;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;font-size:1.3em;margin:0;padding:.5em .7em;background:#1f1f1f;font-weight:400;text-shadow:1px 1px 1px #000;background-size:cover!important}h1 .element{font-size:.8em}.content{padding:10px 0 5px}.content>div,::slotted(:not(:empty)){display:block;clear:both;padding:5px 15px 5px}.content>div:not(:first-of-type){border-top:1px solid #212121}.content>div:not(:last-child){border-bottom:1px solid #000}::slotted(:not(:empty)){border-top:1px solid #212121}.content-header{display:-ms-flexbox;display:flex;margin-bottom:15px}.icon{margin-right:15px;width:44px;height:50px;background-color:#434343;position:relative;padding:2px 5px;border-radius:3px}.icon:before{content:\" \";position:absolute;top:-2px;bottom:-2px;left:-2px;right:-2px;z-index:-1;background:-webkit-gradient(linear,left top,left bottom,from(#1b1b1b),to(#343434));background:linear-gradient(180deg,#1b1b1b 0,#343434);border-radius:3px}.infoAndLevel{color:#fff;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;padding-bottom:5px}.level{font-size:1.5em}.requirements{clear:both}.requirements p:not(:first-child){color:#ecc400}.requirements p.fail{color:#ce3434}::slotted(*),p{color:#999;margin:1px 0;line-height:1.5em}.description span{color:#09c}.extras{font-style:italic}"}}export{h as ms_chart,o as ms_footer,c as ms_icon,u as ms_skill,v as ms_skill_overlay};
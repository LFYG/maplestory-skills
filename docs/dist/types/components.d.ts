/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import './stencil.core';


import {
  Sigil,
} from './components/charts/runeblade/runeblade-sigil';
import {
  ISkill,
} from './global/values/_skillValues.interfaces';
import {
  EventEmitter,
} from './stencil.core';


export namespace Components {

  interface MsArcher {
    'agileArcher': number;
    'arrowBarrage': number;
    'arrowStorm': number;
    'arrowStream': number;
    'bowSwing': number;
    'bronzeEagle': number;
    'conditioning': number;
    'eagleClaw': number;
    'eagleGlide': number;
    'eaglesMajesty': number;
    'editable': boolean;
    'evasiveSalvo': number;
    'extras': boolean;
    'getData': () => Promise<import("C:/Users/Marcus/Dropbox/Programming/_github/maplestory-skills/src/components/charts/skill-change-event").ISkillChangeEvent>;
    'iceArrow': number;
    'precisionShooter': number;
    'rapidShot': number;
    'screwdriverShot': number;
    'sharpEyes': number;
    'snipe': number;
  }
  interface MsArcherAttributes extends StencilHTMLAttributes {
    'agileArcher'?: number;
    'arrowBarrage'?: number;
    'arrowStorm'?: number;
    'arrowStream'?: number;
    'bowSwing'?: number;
    'bronzeEagle'?: number;
    'conditioning'?: number;
    'eagleClaw'?: number;
    'eagleGlide'?: number;
    'eaglesMajesty'?: number;
    'editable'?: boolean;
    'evasiveSalvo'?: number;
    'extras'?: boolean;
    'iceArrow'?: number;
    'onSkillchanged'?: (event: CustomEvent) => void;
    'precisionShooter'?: number;
    'rapidShot'?: number;
    'screwdriverShot'?: number;
    'sharpEyes'?: number;
    'snipe'?: number;
  }

  interface MsAssassin {
    'darkCloak': number;
    'dash': number;
    'deathSentence': number;
    'editable': boolean;
    'extras': boolean;
    'fatalStrikes': number;
    'fragmentedStar': number;
    'getData': () => Promise<import("C:/Users/Marcus/Dropbox/Programming/_github/maplestory-skills/src/components/charts/skill-change-event").ISkillChangeEvent>;
    'luckyStars': number;
    'markOfDeath': number;
    'mirrorImageDarkBlade': number;
    'shadowArts': number;
    'shadowBurst': number;
    'shadowChaser': number;
    'shadowCutter': number;
    'shadowWeb': number;
    'soulGrind': number;
    'starChaser': number;
    'starFlurry': number;
    'thrownWeaponMastery': number;
  }
  interface MsAssassinAttributes extends StencilHTMLAttributes {
    'darkCloak'?: number;
    'dash'?: number;
    'deathSentence'?: number;
    'editable'?: boolean;
    'extras'?: boolean;
    'fatalStrikes'?: number;
    'fragmentedStar'?: number;
    'luckyStars'?: number;
    'markOfDeath'?: number;
    'mirrorImageDarkBlade'?: number;
    'onSkillchanged'?: (event: CustomEvent) => void;
    'shadowArts'?: number;
    'shadowBurst'?: number;
    'shadowChaser'?: number;
    'shadowCutter'?: number;
    'shadowWeb'?: number;
    'soulGrind'?: number;
    'starChaser'?: number;
    'starFlurry'?: number;
    'thrownWeaponMastery'?: number;
  }

  interface MsBerserker {
    'adrenalineRush': number;
    'bloodPrice': number;
    'bloodlust': number;
    'darkAura': number;
    'darkBreaker': number;
    'darkMight': number;
    'deathSpin': number;
    'deepWounds': number;
    'earthquake': number;
    'editable': boolean;
    'extras': boolean;
    'getData': () => Promise<import("C:/Users/Marcus/Dropbox/Programming/_github/maplestory-skills/src/components/charts/skill-change-event").ISkillChangeEvent>;
    'greatswordMastery': number;
    'groundBreaker': number;
    'inhumanEndurance': number;
    'intimidation': number;
    'ragingSlash': number;
    'voidSlash': number;
    'warriorsInstinct': number;
    'xSlash': number;
  }
  interface MsBerserkerAttributes extends StencilHTMLAttributes {
    'adrenalineRush'?: number;
    'bloodPrice'?: number;
    'bloodlust'?: number;
    'darkAura'?: number;
    'darkBreaker'?: number;
    'darkMight'?: number;
    'deathSpin'?: number;
    'deepWounds'?: number;
    'earthquake'?: number;
    'editable'?: boolean;
    'extras'?: boolean;
    'greatswordMastery'?: number;
    'groundBreaker'?: number;
    'inhumanEndurance'?: number;
    'intimidation'?: number;
    'onSkillchanged'?: (event: CustomEvent) => void;
    'ragingSlash'?: number;
    'voidSlash'?: number;
    'warriorsInstinct'?: number;
    'xSlash'?: number;
  }

  interface MsChart {
    'msClass': string;
  }
  interface MsChartAttributes extends StencilHTMLAttributes {
    'msClass'?: string;
  }

  interface MsHeavyGunner {
    'advancedBullets': number;
    'advancedMissiles': number;
    'advancedPulseWeapons': number;
    'blastChargeKit': number;
    'bulletSpray': number;
    'editable': boolean;
    'electricBlast': number;
    'extras': boolean;
    'gatlingFire': number;
    'getData': () => Promise<import("C:/Users/Marcus/Dropbox/Programming/_github/maplestory-skills/src/components/charts/skill-change-event").ISkillChangeEvent>;
    'homingMissiles': number;
    'jetBoots': number;
    'lockOn': number;
    'mBomb': number;
    'magneticBomb': number;
    'medKit': number;
    'reload': number;
    'rocketLauncher': number;
    'stunGrenades': number;
    'suborbitalBombardment': number;
  }
  interface MsHeavyGunnerAttributes extends StencilHTMLAttributes {
    'advancedBullets'?: number;
    'advancedMissiles'?: number;
    'advancedPulseWeapons'?: number;
    'blastChargeKit'?: number;
    'bulletSpray'?: number;
    'editable'?: boolean;
    'electricBlast'?: number;
    'extras'?: boolean;
    'gatlingFire'?: number;
    'homingMissiles'?: number;
    'jetBoots'?: number;
    'lockOn'?: number;
    'mBomb'?: number;
    'magneticBomb'?: number;
    'medKit'?: number;
    'onSkillchanged'?: (event: CustomEvent) => void;
    'reload'?: number;
    'rocketLauncher'?: number;
    'stunGrenades'?: number;
    'suborbitalBombardment'?: number;
  }

  interface MsKnight {
    'bulwark': number;
    'crossCut': number;
    'defenderOfTheFaith': number;
    'divineStrike': number;
    'drillThrust': number;
    'editable': boolean;
    'extras': boolean;
    'getData': () => Promise<import("C:/Users/Marcus/Dropbox/Programming/_github/maplestory-skills/src/components/charts/skill-change-event").ISkillChangeEvent>;
    'ironDefense': number;
    'ironShield': number;
    'longswordMastery': number;
    'shieldBooster': number;
    'shieldCharge': number;
    'shieldMastery': number;
    'shieldToss': number;
    'shieldWall': number;
    'stingingFlurry': number;
    'tornadoSlash': number;
    'typhoonSlash': number;
    'warhorn': number;
  }
  interface MsKnightAttributes extends StencilHTMLAttributes {
    'bulwark'?: number;
    'crossCut'?: number;
    'defenderOfTheFaith'?: number;
    'divineStrike'?: number;
    'drillThrust'?: number;
    'editable'?: boolean;
    'extras'?: boolean;
    'ironDefense'?: number;
    'ironShield'?: number;
    'longswordMastery'?: number;
    'onSkillchanged'?: (event: CustomEvent) => void;
    'shieldBooster'?: number;
    'shieldCharge'?: number;
    'shieldMastery'?: number;
    'shieldToss'?: number;
    'shieldWall'?: number;
    'stingingFlurry'?: number;
    'tornadoSlash'?: number;
    'typhoonSlash'?: number;
    'warhorn'?: number;
  }

  interface MsPriest {
    'angelicRay': number;
    'celestialBlessings': number;
    'celestialGuardian': number;
    'celestialLight': number;
    'disciple': number;
    'editable': boolean;
    'extras': boolean;
    'getData': () => Promise<import("C:/Users/Marcus/Dropbox/Programming/_github/maplestory-skills/src/components/charts/skill-change-event").ISkillChangeEvent>;
    'healingMastery': number;
    'healingPrayer': number;
    'heavenlyWings': number;
    'holyBlast': number;
    'holyRelic': number;
    'holySymbol': number;
    'sanctuary': number;
    'scepterMastery': number;
    'scourgingWave': number;
    'shieldOfTheArchon': number;
    'smitingAura': number;
    'steadfastFaith': number;
  }
  interface MsPriestAttributes extends StencilHTMLAttributes {
    'angelicRay'?: number;
    'celestialBlessings'?: number;
    'celestialGuardian'?: number;
    'celestialLight'?: number;
    'disciple'?: number;
    'editable'?: boolean;
    'extras'?: boolean;
    'healingMastery'?: number;
    'healingPrayer'?: number;
    'heavenlyWings'?: number;
    'holyBlast'?: number;
    'holyRelic'?: number;
    'holySymbol'?: number;
    'onSkillchanged'?: (event: CustomEvent) => void;
    'sanctuary'?: number;
    'scepterMastery'?: number;
    'scourgingWave'?: number;
    'shieldOfTheArchon'?: number;
    'smitingAura'?: number;
    'steadfastFaith'?: number;
  }

  interface MsRuneblade {
    'bladeChasm': number;
    'bladeMastery': number;
    'blink': number;
    'echoingBlade': number;
    'editable': boolean;
    'elementalPotency': number;
    'extras': boolean;
    'flameSigil': number;
    'flurry': number;
    'frostSigil': number;
    'getData': () => Promise<import("C:/Users/Marcus/Dropbox/Programming/_github/maplestory-skills/src/components/charts/skill-change-event").ISkillChangeEvent>;
    'gravityRune': number;
    'honingRunes': number;
    'illusoryBlades': number;
    'impact': number;
    'runeBalance': number;
    'runeFocus': number;
    'sigil': Sigil;
    'stormSigil': number;
    'wardingRune': number;
    'whirlingBlades': number;
  }
  interface MsRunebladeAttributes extends StencilHTMLAttributes {
    'bladeChasm'?: number;
    'bladeMastery'?: number;
    'blink'?: number;
    'echoingBlade'?: number;
    'editable'?: boolean;
    'elementalPotency'?: number;
    'extras'?: boolean;
    'flameSigil'?: number;
    'flurry'?: number;
    'frostSigil'?: number;
    'gravityRune'?: number;
    'honingRunes'?: number;
    'illusoryBlades'?: number;
    'impact'?: number;
    'onSkillchanged'?: (event: CustomEvent) => void;
    'runeBalance'?: number;
    'runeFocus'?: number;
    'sigil'?: Sigil;
    'stormSigil'?: number;
    'wardingRune'?: number;
    'whirlingBlades'?: number;
  }

  interface MsSoulBinder {
    'animusFocus': number;
    'concussionOrb': number;
    'editable': boolean;
    'energySurge': number;
    'expansionBlast': number;
    'extras': boolean;
    'flashStrike': number;
    'fountOfRenewal': number;
    'getData': () => Promise<import("C:/Users/Marcus/Dropbox/Programming/_github/maplestory-skills/src/components/charts/skill-change-event").ISkillChangeEvent>;
    'healingBond': number;
    'illusion': number;
    'lightBarrier': number;
    'mantraArray': number;
    'narubashanUnleashed': number;
    'orbMastery': number;
    'radiantSalvo': number;
    'ragingTempest': number;
    'shootingStar': number;
    'soaringOrb': number;
    'staticFlash': number;
  }
  interface MsSoulBinderAttributes extends StencilHTMLAttributes {
    'animusFocus'?: number;
    'concussionOrb'?: number;
    'editable'?: boolean;
    'energySurge'?: number;
    'expansionBlast'?: number;
    'extras'?: boolean;
    'flashStrike'?: number;
    'fountOfRenewal'?: number;
    'healingBond'?: number;
    'illusion'?: number;
    'lightBarrier'?: number;
    'mantraArray'?: number;
    'narubashanUnleashed'?: number;
    'onSkillchanged'?: (event: CustomEvent) => void;
    'orbMastery'?: number;
    'radiantSalvo'?: number;
    'ragingTempest'?: number;
    'shootingStar'?: number;
    'soaringOrb'?: number;
    'staticFlash'?: number;
  }

  interface MsThief {
    'bladeDance': number;
    'cunningTactics': number;
    'deftCombatant': number;
    'doubleSlash': number;
    'editable': boolean;
    'extras': boolean;
    'getData': () => Promise<import("C:/Users/Marcus/Dropbox/Programming/_github/maplestory-skills/src/components/charts/skill-change-event").ISkillChangeEvent>;
    'haste': number;
    'mesoguardPlus': number;
    'mindBreaker': number;
    'mindStealer': number;
    'poisonEdge': number;
    'poisonVial': number;
    'quickStep': number;
    'retaliation': number;
    'ruthlessGuile': number;
    'somersaultKick': number;
    'spiritThief': number;
    'surpriseAttack': number;
    'viciousCuts': number;
  }
  interface MsThiefAttributes extends StencilHTMLAttributes {
    'bladeDance'?: number;
    'cunningTactics'?: number;
    'deftCombatant'?: number;
    'doubleSlash'?: number;
    'editable'?: boolean;
    'extras'?: boolean;
    'haste'?: number;
    'mesoguardPlus'?: number;
    'mindBreaker'?: number;
    'mindStealer'?: number;
    'onSkillchanged'?: (event: CustomEvent) => void;
    'poisonEdge'?: number;
    'poisonVial'?: number;
    'quickStep'?: number;
    'retaliation'?: number;
    'ruthlessGuile'?: number;
    'somersaultKick'?: number;
    'spiritThief'?: number;
    'surpriseAttack'?: number;
    'viciousCuts'?: number;
  }

  interface MsWizard {
    'arcaneBlast': number;
    'chainLightning': number;
    'cryomancy': number;
    'editable': boolean;
    'electromancy': number;
    'elementalMaster': number;
    'extras': boolean;
    'flameTornado': number;
    'flameWave': number;
    'focusSeal': number;
    'getData': () => Promise<import("C:/Users/Marcus/Dropbox/Programming/_github/maplestory-skills/src/components/charts/skill-change-event").ISkillChangeEvent>;
    'iceSpear': number;
    'iceStorm': number;
    'magicArmor': number;
    'manaClaw': number;
    'manaFont': number;
    'phantomClaw': number;
    'pyromancy': number;
    'teleport': number;
    'thunderbolt': number;
  }
  interface MsWizardAttributes extends StencilHTMLAttributes {
    'arcaneBlast'?: number;
    'chainLightning'?: number;
    'cryomancy'?: number;
    'editable'?: boolean;
    'electromancy'?: number;
    'elementalMaster'?: number;
    'extras'?: boolean;
    'flameTornado'?: number;
    'flameWave'?: number;
    'focusSeal'?: number;
    'iceSpear'?: number;
    'iceStorm'?: number;
    'magicArmor'?: number;
    'manaClaw'?: number;
    'manaFont'?: number;
    'onSkillchanged'?: (event: CustomEvent) => void;
    'phantomClaw'?: number;
    'pyromancy'?: number;
    'teleport'?: number;
    'thunderbolt'?: number;
  }

  interface MsExtraCounter {
    'editor'?: string;
  }
  interface MsExtraCounterAttributes extends StencilHTMLAttributes {
    'editor'?: string;
  }

  interface MsExtraOutlet {
    'editor': string;
  }
  interface MsExtraOutletAttributes extends StencilHTMLAttributes {
    'editor'?: string;
  }

  interface MsFooter {}
  interface MsFooterAttributes extends StencilHTMLAttributes {}

  interface MsIcon {
    'name': string;
    'sp': boolean;
  }
  interface MsIconAttributes extends StencilHTMLAttributes {
    'name'?: string;
    'sp'?: boolean;
  }

  interface MsSkillOverlay {
    'extras': boolean;
    'level': number;
    'skill': ISkill;
  }
  interface MsSkillOverlayAttributes extends StencilHTMLAttributes {
    'extras'?: boolean;
    'level'?: number;
    'skill'?: ISkill;
  }

  interface MsSkill {
    'column': number;
    'disabled': boolean;
    'extras': boolean;
    'level': number;
    'limitReached': boolean;
    'locked': boolean;
    'loop': boolean;
    'required': string;
    'row': number;
    'skill': ISkill;
  }
  interface MsSkillAttributes extends StencilHTMLAttributes {
    'column'?: number;
    'disabled'?: boolean;
    'extras'?: boolean;
    'level'?: number;
    'limitReached'?: boolean;
    'locked'?: boolean;
    'loop'?: boolean;
    'onLevelchanged'?: (event: CustomEvent<number>) => void;
    'onSkillclicked'?: (event: CustomEvent<ISkill>) => void;
    'required'?: string;
    'row'?: number;
    'skill'?: ISkill;
  }
}

declare global {
  interface StencilElementInterfaces {
    'MsArcher': Components.MsArcher;
    'MsAssassin': Components.MsAssassin;
    'MsBerserker': Components.MsBerserker;
    'MsChart': Components.MsChart;
    'MsHeavyGunner': Components.MsHeavyGunner;
    'MsKnight': Components.MsKnight;
    'MsPriest': Components.MsPriest;
    'MsRuneblade': Components.MsRuneblade;
    'MsSoulBinder': Components.MsSoulBinder;
    'MsThief': Components.MsThief;
    'MsWizard': Components.MsWizard;
    'MsExtraCounter': Components.MsExtraCounter;
    'MsExtraOutlet': Components.MsExtraOutlet;
    'MsFooter': Components.MsFooter;
    'MsIcon': Components.MsIcon;
    'MsSkillOverlay': Components.MsSkillOverlay;
    'MsSkill': Components.MsSkill;
  }

  interface StencilIntrinsicElements {
    'ms-archer': Components.MsArcherAttributes;
    'ms-assassin': Components.MsAssassinAttributes;
    'ms-berserker': Components.MsBerserkerAttributes;
    'ms-chart': Components.MsChartAttributes;
    'ms-heavy-gunner': Components.MsHeavyGunnerAttributes;
    'ms-knight': Components.MsKnightAttributes;
    'ms-priest': Components.MsPriestAttributes;
    'ms-runeblade': Components.MsRunebladeAttributes;
    'ms-soul-binder': Components.MsSoulBinderAttributes;
    'ms-thief': Components.MsThiefAttributes;
    'ms-wizard': Components.MsWizardAttributes;
    'ms-extra-counter': Components.MsExtraCounterAttributes;
    'ms-extra-outlet': Components.MsExtraOutletAttributes;
    'ms-footer': Components.MsFooterAttributes;
    'ms-icon': Components.MsIconAttributes;
    'ms-skill-overlay': Components.MsSkillOverlayAttributes;
    'ms-skill': Components.MsSkillAttributes;
  }


  interface HTMLMsArcherElement extends Components.MsArcher, HTMLStencilElement {}
  var HTMLMsArcherElement: {
    prototype: HTMLMsArcherElement;
    new (): HTMLMsArcherElement;
  };

  interface HTMLMsAssassinElement extends Components.MsAssassin, HTMLStencilElement {}
  var HTMLMsAssassinElement: {
    prototype: HTMLMsAssassinElement;
    new (): HTMLMsAssassinElement;
  };

  interface HTMLMsBerserkerElement extends Components.MsBerserker, HTMLStencilElement {}
  var HTMLMsBerserkerElement: {
    prototype: HTMLMsBerserkerElement;
    new (): HTMLMsBerserkerElement;
  };

  interface HTMLMsChartElement extends Components.MsChart, HTMLStencilElement {}
  var HTMLMsChartElement: {
    prototype: HTMLMsChartElement;
    new (): HTMLMsChartElement;
  };

  interface HTMLMsHeavyGunnerElement extends Components.MsHeavyGunner, HTMLStencilElement {}
  var HTMLMsHeavyGunnerElement: {
    prototype: HTMLMsHeavyGunnerElement;
    new (): HTMLMsHeavyGunnerElement;
  };

  interface HTMLMsKnightElement extends Components.MsKnight, HTMLStencilElement {}
  var HTMLMsKnightElement: {
    prototype: HTMLMsKnightElement;
    new (): HTMLMsKnightElement;
  };

  interface HTMLMsPriestElement extends Components.MsPriest, HTMLStencilElement {}
  var HTMLMsPriestElement: {
    prototype: HTMLMsPriestElement;
    new (): HTMLMsPriestElement;
  };

  interface HTMLMsRunebladeElement extends Components.MsRuneblade, HTMLStencilElement {}
  var HTMLMsRunebladeElement: {
    prototype: HTMLMsRunebladeElement;
    new (): HTMLMsRunebladeElement;
  };

  interface HTMLMsSoulBinderElement extends Components.MsSoulBinder, HTMLStencilElement {}
  var HTMLMsSoulBinderElement: {
    prototype: HTMLMsSoulBinderElement;
    new (): HTMLMsSoulBinderElement;
  };

  interface HTMLMsThiefElement extends Components.MsThief, HTMLStencilElement {}
  var HTMLMsThiefElement: {
    prototype: HTMLMsThiefElement;
    new (): HTMLMsThiefElement;
  };

  interface HTMLMsWizardElement extends Components.MsWizard, HTMLStencilElement {}
  var HTMLMsWizardElement: {
    prototype: HTMLMsWizardElement;
    new (): HTMLMsWizardElement;
  };

  interface HTMLMsExtraCounterElement extends Components.MsExtraCounter, HTMLStencilElement {}
  var HTMLMsExtraCounterElement: {
    prototype: HTMLMsExtraCounterElement;
    new (): HTMLMsExtraCounterElement;
  };

  interface HTMLMsExtraOutletElement extends Components.MsExtraOutlet, HTMLStencilElement {}
  var HTMLMsExtraOutletElement: {
    prototype: HTMLMsExtraOutletElement;
    new (): HTMLMsExtraOutletElement;
  };

  interface HTMLMsFooterElement extends Components.MsFooter, HTMLStencilElement {}
  var HTMLMsFooterElement: {
    prototype: HTMLMsFooterElement;
    new (): HTMLMsFooterElement;
  };

  interface HTMLMsIconElement extends Components.MsIcon, HTMLStencilElement {}
  var HTMLMsIconElement: {
    prototype: HTMLMsIconElement;
    new (): HTMLMsIconElement;
  };

  interface HTMLMsSkillOverlayElement extends Components.MsSkillOverlay, HTMLStencilElement {}
  var HTMLMsSkillOverlayElement: {
    prototype: HTMLMsSkillOverlayElement;
    new (): HTMLMsSkillOverlayElement;
  };

  interface HTMLMsSkillElement extends Components.MsSkill, HTMLStencilElement {}
  var HTMLMsSkillElement: {
    prototype: HTMLMsSkillElement;
    new (): HTMLMsSkillElement;
  };

  interface HTMLElementTagNameMap {
    'ms-archer': HTMLMsArcherElement
    'ms-assassin': HTMLMsAssassinElement
    'ms-berserker': HTMLMsBerserkerElement
    'ms-chart': HTMLMsChartElement
    'ms-heavy-gunner': HTMLMsHeavyGunnerElement
    'ms-knight': HTMLMsKnightElement
    'ms-priest': HTMLMsPriestElement
    'ms-runeblade': HTMLMsRunebladeElement
    'ms-soul-binder': HTMLMsSoulBinderElement
    'ms-thief': HTMLMsThiefElement
    'ms-wizard': HTMLMsWizardElement
    'ms-extra-counter': HTMLMsExtraCounterElement
    'ms-extra-outlet': HTMLMsExtraOutletElement
    'ms-footer': HTMLMsFooterElement
    'ms-icon': HTMLMsIconElement
    'ms-skill-overlay': HTMLMsSkillOverlayElement
    'ms-skill': HTMLMsSkillElement
  }

  interface ElementTagNameMap {
    'ms-archer': HTMLMsArcherElement;
    'ms-assassin': HTMLMsAssassinElement;
    'ms-berserker': HTMLMsBerserkerElement;
    'ms-chart': HTMLMsChartElement;
    'ms-heavy-gunner': HTMLMsHeavyGunnerElement;
    'ms-knight': HTMLMsKnightElement;
    'ms-priest': HTMLMsPriestElement;
    'ms-runeblade': HTMLMsRunebladeElement;
    'ms-soul-binder': HTMLMsSoulBinderElement;
    'ms-thief': HTMLMsThiefElement;
    'ms-wizard': HTMLMsWizardElement;
    'ms-extra-counter': HTMLMsExtraCounterElement;
    'ms-extra-outlet': HTMLMsExtraOutletElement;
    'ms-footer': HTMLMsFooterElement;
    'ms-icon': HTMLMsIconElement;
    'ms-skill-overlay': HTMLMsSkillOverlayElement;
    'ms-skill': HTMLMsSkillElement;
  }


}
